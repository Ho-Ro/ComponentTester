------------------------------------------------------------------------------

             Änderungen der Component-Tester-Firmware (m-firmware)

                       (c) 2012-2021 by Markus Reschke

------------------------------------------------------------------------------

v1.43m 2021-?
- R&D-Anzeigentreiber zur Identifizierung von Controllern.
- Steuersignal LCD_RD ist nun optional für ILI9341, ILI9481, ILI9486 und
  ILI9488.
- Modifizierter Treiber für ST7735-teil-kompatible Anzeigen (Vorschlag von
  b0hoon4@gmail.com).
- Option zum Ausführen des Zenertests während der normalen Bauteilesuche (
  HW_PROBE_ZENER, Vorschlag von indman@EEVblog). Benötigt ZENER_UNSWITCHED.
  Und entsprechendes Fernsteuerkommando ergänzt (V_Z).
- Option für anwenderspezifischen Spannungsteiler für den Zenertest (
  ZENER_DIVIDER_CUSTOM, ZENER_R1 und ZENER_R2).
- Option für niedrige Aufösung im Zenertest entfernt, und auch den
  Konfigurationsschalter ZENER_HIGH_RES.
- Russische Texte aktualisiert (Dank an indman@EEVblog).
- Optionale Anzeige der Pulsdauer für PWM-Generatoren (PWM_SHOW_DURATION,
  Vorschlag von Gast "hamburger" @mikrocontroller.net),
- Source-Archiv beinhaltet nun auch das Verzeichnis "dep", um ein paar IDEs
  glücklich zu machen (Vorschlag von DAIRVINE@EEVblog).
- Konfigurationschalter SW_PROBE_COLORS zu UI_PROBE_COLORS umbenannt.
- Überschriften können andersfarbig ausgegeben werden (UI_COLORED_TITLES).
  Ebenfalls Cursor und Bedienungshinweise (UI_COLORED_CURSOR).
- Rumänische Texte aktualisiert (Dank an Dumidan@EEVblog).
- Alternative polnische Texte aktialisiert (Dank an Jacon@EEVblog).
- Spanische Texte aktualisiert (Dank an pepe10000@EEVblog).

v1.42m 2020-12
- Aktualisierte 6x8-Zeichensätze (Dank an Bohu).
- Neuer 6x8-Zeichensatz nach ISO8859-2 (FONT_6X8_ISO8859_2_HF, Dank an Bohu).
- Neue Hardware-Option: LC-Meter (HW_LC_METER). Basiert auf einer einfachen
  Schaltung mit einem LC-Oszillator, ähnlich den preiswerten LC-Meter-
  Bausätzen.
- Display_Value() unterstützt nun auch Fempto (f).
- Wenn CYCLE_MAX auf 255 gesetzt ist, wird die Abschaltautomatik deaktiviert 
  und der Tester läuft solange, bis er manuell abgeschaltet wird.
- Problem mit Anzeige seltsamer Frequenzen im erweiterten Frequenzzähler in
  einer bestimmten Konstellation beseitigt (gemeldet von Szybkijanek@EEVblog).
  Ebenfalls Anzeige bei fehlendem Signal oder zu niedriger Frequenz von "0Hz"
  auf "-" geändert.
- Der einfache Frequenzzähler zeigt nun ein "-" statt "0Hz" an, wenn kein
  Signal anliegt oder die Frequenz zu niedrig ist.
- Option zur Ausgabe des Teststroms I_C bzw. I_E der hFE-Messung (
  SW_HFE_CURRENT, Vorschlag von Obelix2007@EEVblog). Und entsprechende 
  Fernsteuerkommandos ergänzt (I_C und I_E),
- Romänische Texte (Dank an Dumidan@EEVblog).
- Konfigurationsschalter für ESR-Tool (SW_ESR_TOOL, Vorschlag von
  indman@EEVblog).
- Textausgabe von E-Normwerten gibt nun auch Einheit aus (Vorschlag von
  indman@EEVblog).
- Alternative polnische Texte aktialisiert (Dank an Jacon@EEVblog).
- Letzte Textzeile auf dem Display wurde einfach überschrieben, wenn
  UI_KEY_HINTS aktiviert ist (gemeldet von Obelix2007@EEVblog). Funktion zum
  Warten auf Benutzer vorm Löschen der letzten Zeile eingebaut.
- Spanische Texte aktualisiert (Dank an pepe10000@EEVblog).
- Fehler in "#define" für E96-Norm-Werte korrigiert (gemeldet von
  Obelix2007@EEVblog).
- Treiber für Display mit ILI9488 (8/16-Bit Parallel und 4-Draht-SPI, Dank an
  Bohu für ein Testexemplar). 

v1.41m 2020-09
- Neues Fernsteuerkommando "MHINT" für Hinweise zu Messungen (momentan nur
  Typ der Testschaltung für h_FE).
- Auto-Modus (automatische Aktualisierung) für DS18B20 eingebaut (Vorschlag
  von Obelix2007@EEVblog).
- Zusätzliche Endladefunktion zum Beseitigen eines ESR-Problems bei manchen
  Testerclones (gemeldet von indman@EEVblog). ESR-Wert war viel zu hoch für
  Elko >=470µF an Testpins #1 und #2, im ESR-Tool, C-Monitor und RCL-Monitor.
  Und für Elko >=4700µF in allen Modi. Betroffene Tester sind Hiland M644 und
  TC-1-Varianten.
- Grad-Zeichen in font_16x26_hf.h und font_16x26_iso8859-2_hf.h aktualsiert (
  Änderungen von Bohu). 
- Treiber für OLED-Controller SH1106 (3-Wire SPI, 4-Wire SPI und I2C; Dank an
  Old-Papa für ein Test-Display).
- Fehlende Initialisierung des /RES-Signals für I2C im SSD1306-Treiber
  ergänzt.
- Ausgabe des Typs der Testschaltung für hFE.
- Ausgabe von Hexadezimalwerten auf Kleinbuchstaben geändert, und Schalter zum
  Aktivieren von Grossbuchstaben ergänzt (UI_HEX_UPPERCASE).
- Option für OneWire-Funktionen zum zusätzlichen Auslesen und Anzeigen des
  ROM-Codes (ONEWIRE_READ_ROM, Vorschlag von indman@EEVblog).
- DQ und Vcc-Testpins für OneWire-Bus passend zur Pinbelegung von Sensoren
  vertauscht (Vorschlag von indman@EEVblog).
- Erkennung von Schottky-Transistoren (SW_SCHOTTKY_BJT).
- Verbesserung der Erkennung von FET-Verarmungstypen mittels Filter für
  Schottky-Transistoren.
- Textzeilenverwaltung zum Löschen der Anzeige optimiert.
- Spezieller Display-Treiber zum Identifizieren von Display-Controllern.
- R/C/L-Monitor (SW_MONITOR_RCL, Vorschlag von indman@EEVblog).
- Problem mit wechselnden Induktivitätswerten im L und R/L-Monitor gelöst (
  gemeldet von indman@EEVblog).
- Messung von V_GS(off) für Verarmungstyp-FETs (Vorschlag von joshto@EEVblog).
  Fernsteuerkommandos um den Befehl "V_GS_off" erweitert.
- ILI9341-Treiber um Unterstützung von 8-Bit-Parallel-Bus erweitert. Außerdem
  Konfigurationsschalter für ILI9341 mit deaktiviertem erweiterten
  Befehlssatz ergänzt (LCD_EXT_CMD_OFF, Dank an Bohu für ein Testexemplar).
- Kyrillischer 16x26-Zeichensatz (FONT_16X26_WIN1251_HF, Dank an
  Yuriy_K@VRTP.RU).
- Problem mit fehlendem µ (micro) in mehreren ISO8859-2-Zeichensätzen
  behoben (gemeldet von indman@EEVblog und Obelix2007@EEVblog).
- Zahlendreher bei ATmega 2560 im Makefile korrigiert (gemeldet von Bohu).
- Farbiger Batteriestatus für Farbanzeigen (Vorschlag von indman@EEVblog).
- Alternativen 8x16-Win1251-Zeichensatz durch aktualisierte Version von
  indman@EEVblog ersetzt.
- Problem mit der Gültigkeitsprüfung von kleinen Widerständen in 
  CheckResistor() beseitigt (gemeldet von indman@EEVblog).
- SmallResistor(), MeasureInductance() und GetGateThreshold() für die Unter-
  stützung von ADC_LARGE_BUFFER_CAP aktualsiert.
- Fehlende Aktualisierung der ADC-Referenzquelle in MeasureInductance() und
  GetGateThreshold() ergänzt.
- Option zur Auswahl des Abgleichprofils nach dem Einschalten (
  UI_CHOOSE_PROFILE, Vorschlag von Bohu).
- Eigene Monitorfunktion für Widerstände und Induktivitäten (SW_MONITOR_R,
  SW_MONITOR_L, Vorschlag von indman@EEVblog).
- Spanische Texte aktualisiert (Dank an pepe10000@EEVblog).

v1.40m 2020-07
- Fehler in SSD1306-Treiber beseitigt, der zur Falschplatzierung der Bauteile-
  symbole führte (gemeldet von Andrei Paul).
- Avrdude-Konfiguration im Makefile so geändert, dass sie mehr benutzer-
  freundlich ist und Optionen erlaubt.
- Treiber für Displays mit ILI9481 oder ILI9486 (8 und 16-Bit Parallel). Dank
  an Bohu für ein Display mit ILI9486 zum Testen.
- Logikfehler für Farbanzeigen bei abgeschalteter Farb-Funktion beseitigt.
- Ergänzung von Konfigurationschalter für Farbanzeigen zum Vertauschen der
  Farbkanäle für Rot und Blau (LCD_BGR).
- R/L-Monitor verbessert, um Streuung der Messwerte zu reduzieren (gemeldet
  von indman@EEVblog). Hilft nicht in allen Fällen.
- Problem mit "#ifdef" für Funktionen Display_HexByte() and Display_HexDigit()
  beseitigt (gemeldet von AlcidePiR2@EEVBlog).
- Unterstützung von ATmega 640/1280/2560. Dank an Bohu für einen Arduino Mega
  2560 zum Testen.
- Die Erkennung der Drehrichtung in ReadEncoder() war umgedreht. Auf korrekte
  Richtung geändert und Einstellungen in config_<MCU>.h und Clones
  aktualisiert.
- Initialisierungproblem bei Hardware-SPI beseitigt. Ebenfalls Fehler in
  SPI_WriteRead_Byte() and I2C_ReadByte() für Bit-Bang-Modus korrigiert.
- Alternativer Modus für Zenertest, wenn Boost-Konverter ständig läuft oder
  gar nicht vorhanden ist (ZENER_UNSWITCHED, Vorschlag von indman@EEVblog).
- Konfigurationsschalter für 100nF AREF-Pufferkondensator anstatt 1nF (
  ADC_LARGE_BUFFER_CAP). Wird für bestimmte MCU-Platinen benötigt.
- Alternative kyrillische Fonts 8x16 (FONT_8X16ALT_WIN1251_HF) und
  8x8 (FONT_8X8ALT_WIN1251_VF, Dank an indman@EEVblog).
- Russische Texte aktualisiert (Dank an indman@EEVblog).
- Option zum Nutzen eines einfachen Ein/Aus-Schalters anstatt des standard-
  mäßigen Soft-Latch-Schalters (POWER_SWITCH_MANUAL).
- Erkennung von zwei kurzen Berührungen der Mitte in ReadTouchScreen()
  ergänzt.
- Algorithmusfehler bzgl. TOUCH_FLIP_X/TOUCH_FLIP_Y in Touch_CharPos()
  beseitigt (gemeldet von Bohu).
- Mehrere ISO8859-2-Zeichensätze durch aktualisierte Versionen von Bohu
  ersetzt.
- Option zum Prüfen von Widerständen auf E-Normwerte (SW_R_E*). Auch für
  Kondensnatoren (SW_C_E*) und Induktivitäten (SW_L_E*). Optional Ausgabe
  von Farbcode für Widerstände (benötigt grafisches Farbdisplay).

v1.39m 2020-03
- Polnische Texte nach ISO 8859-2 (Dank an Jacon).
- Problemchen mit Preprocessor-Macro in SPI.c und Syntaxfehler in ADS7843.c 
  behoben (gemeldet von Bohu).
- Option zum Speichern von Firmwaredaten im Flash anstatt EEPROM (DATA_FLASH,
  Vorschlag von Vitaliy).
- Kyrillische Zeichensätze zu "win1251" umbenannt and tschechische Zeichen-
  sätze durch ISO8859-2-Zeichensätze ersetzt (Dank an Bohu).
- Funktion zur Ausgabe des Zeichensatzes zu Testzwecken (SW_FONT_TEST).
- OneWire-Scan zur Ausgabe der ROM-Codes der Busteilnehmer (SW_ONEWIRE_SCAN). 
- Option für spezifischen Widerstandsoffset je Testpin-Paar (R_MULTIOFFSET,
  Vorschlag von Vitaliy).

v1.38m 2019-12
- Optionales Runden der Temperatur für DS18B20 (UI_ROUND_DS18B20, Vorschlag
  von Obelix2007@EEVblog).
- Unterstützung von DHT11, DHT22 und kompatiblen Sensoren (SW_DHTXX, Dank
  an indman@EEVblog und Obelix2007@EEVblog fürs Testen).
- Zwei dünne kyrillische Zeichensätze ergänzt (Dank an Andrey@EEVblog).
- Ausgabe von Bipolartransistoren so geändert, dass nun V_BE und hFE auch im
  Fall eines B-E-Widerstands angezeigt werden. Ebenfalls Fernsteuerkommandos
  entsprechend angepasst.  
- Alternative tschechische Texte plus mehrere Zeichensätze mit tschechischen
  Zeichen (Dank an Bohu).
- Funktionen zum Beobachten von R/C/L (SW_MONITOR_RL und SW_MONITOR_C,
  Vorschlag von indman@EEVblog).
- Trigger-Ausgang für Ereigniszähler (Vorschlag von Bohu).
- Tschechische Texte aktualisiert (Dank an Bohu).
- Die hFE-Messung mit Common-Collector-Schaltung und Rl als Basiswiderstand
  kann deaktiviert werden (NO_HFE_C_RL), damit bestimmte Tester keine
  überhöhten Ergebnisse liefern (gemeldet von Obelix2007@EEVblog).
- Option zur Ausgabe der Zener-Spannung in hoher Auflösung (ZENER_HIGH_RES,
  Vorschlag von Andbro@EEVblog).
- OneWire_Probes() verbessert, um Fehl-Erkennung zu minimieren. 
- Russische Texte aktualisiert (Dank an indman@EEVblog).
- Spanische Texte aktualisiert (Dank an pepe10000@EEVblog).

v1.37m 2019-09
- Fehler in DS18B20_Tool(), wenn ONEWIRE_IO_PIN aktiviert ist, beseitigt (
  gemeldet von Bohu).
- Problem bei der Anzeige der Watchdog-Fehlermeldung auf Farbanzeigen gelöst.
- Neue Funktion: Ereigniszähler (HW_EVENT_COUNTER, Vorschlag von Bohu).
- Der einfache Frequenzzähler benutzt nun TestKey() zur Benutzereingabe. Zum
  Beenden zweimal kurz Taste drücken (war vorher ein Tastendruck).
- Option zur Anzeige des umgekehrten hFE-Wertes von Transistoren (
  SW_REVERSE_HFE, Vorschlag von towe96@EEVblog). Ebenfalls Fernsteuerkommandos
  um den Befehl "h_FE_r" erweitert.
- Bitclock-Einstellung (BITCLOCK) für avrdude in Makefile (Vorschlag von
  Bohu). 
- Problem bei der TRIAC-Erkennung im Fall von einem zu hohen I_GT in Q3
  oder zu hohem I_H beseitigt (I_GT-Problem gemeldet von petroid).
- Texte Tester_str, PWM_str, Hertz_str and CTR_str in sprachspezifischeto
  Header-Dateien verschoben (Vorschlag von indman@EEVblog).
- Ausgabe von Frequenzwerten (Hertz) auf festen String geändert (vorher "H"
  als Einheit für DisplayValue() plus zusätzliches "z").  
- Option zum Anzeigen von Bedienungshilfen  (UI_KEY_HINTS). Momentan nur
  "Menu/Test" (Vorschlag von carrascoso@EEVblog).
- Polnische Texte aktualisiert (C szpila@EEVblog). 
- Russische Texte aktualisiert (Dank an indman@EEVblog).
- Spanische Texte aktualisiert (Dank an pepe10000@EEVblog).

v1.36m 2019-05
- Optionalen 6x8 Zeichensatz im ST7565R-Treiber ergänzt.
- Optionaler Menüpunkt zum Abschalten des Testers (SW_POWER_OFF).
- TestKey() und Zener_Tool() um Batterieüberwachung ergänzt.
- Erkennung von zwei kurzen Betätigungen der Testtaste in TestKey() eingebaut,
  und doppelte Funktionalität in mehreren Funktionen entfernt, um Größe der
  Firmware zu verkleinern.
- Treiber für Displays mit ST7036 (4-bit parallel & 4-wire SPI, ungetestet).
- Eigene Funktionen für Stromversorgung und Batterieüberwachung zur besseren
  Integration mit anderen Funktionen.
- Treiber für Displays mit PCF8814 (3-line SPI; Dank an Mahmoud Laouar
  fürs Testen).
- Treiber für Displays mit STE2007/HX1230 (3-line SPI).
- Fehler in Funktion LCD_Clear() im PCD8544-Treiber beseitigt.
- Fehlender kyrillischer Font im ST7565R-Treiber eingetragen (gemeldet von
  Andrey@EEVblog).
- Aktualisierung von font_8x16_cyrillic_vfp.h (Dank an Andrey@EEVblog).
- Problem mit falschem Zeichen in font_HD44780_cyr.h gelöst.

v1.35m 2019-02
- Bei dem Kapazitäts-Offset kann man statt dem bisherigen Durchschnittswert
  für alle Test-Pins nun auch Test-Pin spezifische Offsets nutzen (
  CAP_MULTIOFFSET).
- Pin-Definition für ST7920 im 4-Bit Parallel-Modus in config_644.h
  korrigiert (gemeldet von jakeisprobably@EEVblog).
- Unterstützung von 3-Line SPI in SSD1306-Treiber eingebaut.
- Der SPI-Treiber kann nun auch 9-Bit-Worte senden (nur Bitbang).
- Problem mit steigender Abweichung bei Widerständen zwischen 7k5 und 19k5 Ohm
  in CheckResistor() gelöst (gemeldet von Vitaliy).
- Alternative Verzögerungsschleife in IR_Send_Pulse() eingebaut, welche per
  SW_IR_TX_ALTDELAY aktiviert wird (Dank an Vitaliy).
- Der Konfigurationschalter für zusätzliche IR-Protokolle SW_IR_EXTRA wurde
  durch SW_IR_RX_EXTRA für den Empfänger/Decoder und SW_IR_TX_EXTRA für den
  IR-Sender ersetzt
- Problem mit fehlendem Newline für Fernsteuerkommandos in Display_NextLine()
  beseitigt.
- Ausgabe für SIRC in IR_Decode() geändert, um näher am Protokoll zu sein
  (Vorschlag von Vitaliy).
- Fehler in IR_Send_Code() für SIRC-20 beseitigt (gemeldet von Vitaliy).
- Aktualisierung von var_russian.h (Dank an indman@EEVblog).
- Automatische Abschaltung für Auto-Hold-Modus (POWER_OFF_TIMEOUT).
- Pin-Konfiguration für Test-Taste und Stromversorgungskontrolle getrennt
  (CONTROL_PORT -> POWER_PORT und BUTTON_PORT).
- Mehrere kleine Verbesserungen.

v1.34m 2018-10
- Leckstromtest für Kondensatoren.
- Standardwert für RH_OFFSET auf 350 Ohm geändert.
- Problem mit fehlendem Menüeintrag für festes IR-Empfängermodul beseitigt.
- Polnischer Text (Dank an Szpila).
- Displaytreiber für Ausgabe auf VT100-Terminal.
- Unterstützung von Temperatursensor DS18B20.
- Treiber für OneWire-Bus.

v1.33m 2018-05
- Orientierung von TRIAC-Symbol in symbols_32x32_hf.h korrigiert.
- Fernsteuerkommandos zur Automatisierung (über die serielle
  TTL-Schnittstelle).
- Der X & Y-Offset für den ST7735-Treiber kann nun verändert werden.
- Aufrufen des Menüs per Kurzschluß der Testpins ist nun eine Option (
  UI_SHORT_CIRCUIT_MENU).
- Problem mit Entlade-Relais in Verbindung mit Drehencoder beseitigt.
- Konfigurationschalter zum Ausschalten der MCU-Schlafmodi ergänzt.
- Datenempfang für serielle TTL-Schnittstelle (Bit-Bang & Hardware USART).
- Fehler in serieller Textausgabe beseitigt, und serielle Ausgabe für
  Resultate des Opto-Koppler-Tests eingebaut.
- Dänischer Text (von glenndk@mikrocontroller.net).
- Einstellungen für Korrekturfaktoren für Kondensatoren.

v1.32m 2018-02
- Ausgabe von gefundenen Bauteilen zusätzlich über serielle Schnittstelle.
- Treiber für serielle TTL-Schnittstelle (Hardware & Bit-Bang).
- Aktualisierung von var_russian.h (Dank an indman@EEVblog).
- Unterstützung von X&Y-Offsets im ST7735-Treiber. 
- Einstellungen der Batterieüberwachung geändert. Schalter zum Abschalten
  der Batterieüberwachung und für nicht überwachte externe Stromversorgung
  ergänzt.
- Konfigurationsschalter zur Auswahl des alternativen Betriebsmodus beim
  Starten (UI_AUTOHOLD) 
- Filter für Germanium-Transistoren mit hohem Leckstrom in der Funktion zur
  Erkennung von Verarmungstyp-FETs verbessert.
- Graphisches Pinout im Treiber für PCD8544 ergänzt. Fehler in der Funktion
  LCD_CharPos() für rotierte Ausgabe im PCD8544-Treiber beseitigt.
- Funktionen für graphisches Pinout verbessert und teilweise nach display.c
  verschoben. Separate Ausgabe vom Pinout falls notwendig. 
- Indikator bei Nutzung einer externen Spannungsreferenz (Werte Anzeigen).
- IR-Decoder verbessert und optionale Protokolle eingebaut.
- Zusätzliche Protokolle für IR-Fernbedienung.

v1.31m 2017-12
- IR-Fernbedienung (Sender).
- Unterstützung für feste Signalausgabe über OC1B, wenn OC1B nicht für
  den Testwiderstand von Testpin #2 benutzt wird. 
- Einstellungen für Batterie-Überwachung geändert, um auch andere Optionen
  zur Stromversorgung zu unterstützen. 
- Treiber für SSD1306 basierte OLED-Module.
- Farbunterstützung für Auswahl von Menüpunkten oder Parametern.
- Treiber für ILI9163 basierte LCD-Module.
- Problemchen in Rechteckgenerator beseitigt.
- LCD-Treiber für PCD8544 um 180° rotierte Ausgabe erweitert.
- Editierfehler in Servo_Check() berichtigt.

v1.30m 2017-10
- Option für Komma statt Punkt für Dezimalstellen.
- Unterstützung für den erweiterten Frequenzzähler mit Eingangspuffer, LF und
  HF-Quarzoszillator.
- Kleinere Verbesserungen beim einfachen Frequenzzähler.
- Problem mit Torzeit in Frequenzzähler für Frequenzen unter 10kHz bei MCU-Takt
  von 20MHz beseitigt. 
- ESR-Messung für kürzere Lade-Pulse modifiziert, d.h. der ESR kann nun für
  Kondesatoren ab 10nF gemesssen werden. Wer die alte Messmethode bevorzugt,
  kann diese alternativ aktivieren. 
- Fehler in der Kurzschlußerkennung der Testpins beseitigt.
- LCD-Treiber für ST7920 um 180° rotierte Ausgabe erweitert.

v1.29m 2017-07
- Unterstützung von Touch-Screens und Treiber für ADS7843 kompatible
  Controller.
- Fehler in Kontrast-Einstellung für PCD8544 korrigiert.
- Dummen Fehler in CheckSum() beseitigt.
- Treiber für ST7920 basierte LCD-Module mit 64x128 Pixel.
- SmallResistor() optimiert und Erkennungslogik in CheckResistor() verbessert,
  damit sehr kleine Widerstände in Verbindung mit Kontaktwiderständen der
  Prüfkabel besser erkannt werden.
- Steuerlogik und Schwellwert für Darlingston-Transistoren in Get_hFE_C()
  geändert, um Problem mit manchen NPN-Typen zu beseitigen.
- Zentraler SPI-Treiber. Treiber und Konfiguation von LCD-Modulen entsprechend
  angepasst.
- Italienischer Text von Gino_09@EEVblog.
- Unterstützung von HD44780 mit kyrillischem Zeichensatz durch
  hapless@EEVblog.

v1.28m 2017-04
- Mehr/Weniger-Tasten als Alternative zum Drehencoder (HW_INCDEC_KEYS).
- Zurücksetzen auf Standardfrequenz im Rechteck-Generator ergänzt.
- Weitere Verbesserungen der Erkennung der Drehschwindigkeit von Dreh-
  encodern (ENCODER_STEPS). Änderungen in den Funktionen, welche die Dreh-
  geschwindigkeit nutzen. 
- Zurücksetzen auf Standardwerte im alternativen PWM-Generator ergänzt.
- Russischer Text von indman@EEVblog (nur 8x16 Zeichensatz horizontal
  ausgerichtet)
- Unterstützung von festem Folienkondensator für den Selbstabgleich von
  Spannugsoffsets.
- Potentiellen Fehler in der Handhabung vom V_ref Offset in SmallCap()
  beseitigt.
- Konfigurationsoption für LCD-Module mit ST7735, um mit gelöschter Anzeige
  zu starten (keine zufälligen Punkte).

v1.27m 2017-02
- GetLeakageCurrent() um Hochstrommessung für CLDs erweitert. Dank an
  texaspyro@EEVblog für ein paar Testdioden.
- Fehler in MilliSleep() beseitigt.
- Problem mit großer Induktivität in Diodenerkennung beseitigt.
- Kompensation für Induktivitätsmessung im mH-Bereich.
- Unterstützung für PCF8574 basierte LCD-Adapter in Treiber für HD44780.
- Treiber für bit-bang und Hardware I2C.
- Fehler in der Handhabung der variablen Pinbelegung für HD44780 basierte
  LCD-Module beseitigt.
- Farbiges Pinout für mehrere Menüfunktionen.
- Prüffunktion für Modellbau-Servos.
- Alternativer PWM-Generator mit variabler Frequenz und Pulsweite. Benötigt
  Drehencoder und größeres Display. 
- Ausgabe von R_DS für MOSFETs und Vf der intrinsischen Diode.
- Unterstützung für festes IR-Empfängermodul in IR-Detektor/Dekoder.
- Edition im Namen entfernt, da die Classic Edition inzwischen veraltet ist.

v1.26m 2016-12
- Kompensation für Induktivitätsmessung eingebaut (benötigt weitere Arbeit).
- Anpassung von FrequencyCounter() zur Unterstützung von ATmega 324/644/1284.
- Problem in der Logik der Induktivitätsmessung beseitigt. Hinweis von
  indman@EEVblog.
- Fehler in der Handhabung der Spannungsreferenzen für ATmega 324/644/1284
  gelöst. 
- Erkennung der Drehgeschwindigkeit von Drehencodern verbessert, um 
  unterschiedliche Werte für Pulse/Schritt bzw. Pulse/Rastung besser zu
  handhaben. 
- Alle Treiber für SPI-basierte LCD-Module um Hardware SPI erweitert.


v1.25m 2016-09
- Jede Menge Änderungen zur Unterstützung von ATmega 324/644/1284.
- Manangement der Test-Widerstände auf variable Port-Pins umgestellt.
- Software-Option für Farbkodierung der Testpins.
- Farbmanagement zentralisiert.
- Datei mit Auflistung der Einstellungen für verschiedene Testerversionen 
  bzw. Clone.
- Kleines Problem mit den 24x24-VP Symbolen in config.h beseitigt. Hinweis von
  lordstein@EEVblog und hapless@EEVblog.

v1.24m 2016-08
- Messung vom Selbstentladungsleckstrom von Kondensatoren größer 4,7µF.
- Typenerkennung von Bipolar-Transistoren mit Diode auf dem gleichen Substrat.
- Messung von Leckstrom für Ströme bis in den nA-Bereich erweitert. Für Dioden
  und Bipolar-Transistoren werden Leckströme über 50nA angezeigt. 
- Die Anzeige von Freilaufdioden bei Transistoren prüft nun auf eine korrekte
  Diode (Pins und Polarität).
- Fehler in der Anzeige von Freilaufdioden bei Bipolar-Transistoren beseitigt.
- Funktion zum Suchen einer bestimmten Diode geschrieben und mehrere andere
  Funktionen entsprechend angepaßt.
- Erkennung von Dioden verbessert, um auch Germanium-Dioden mit sehr
  niedrigem Vf bei kleinen Strömen zu finden.
- Problem mit LCD_ClearLine(0) für ILI9341 und ST7735 gelöst.
- Verbesserung der Erkennung von Verarmungs-FETs. Germanium-Transistoren mit
  hohem Leckstrom werden ausgefiltert. Auch werden nun FETs mit niedrigem
  I_DSS erkannt. Messung von I_DSS.

v1.23m 2016-07
- Unterstützung von PCD8544 und ST7735 kompatiblen LCD-Modulen. Dank an
  hansibull@EEVblog für ein PCD8544-Display.
- wait.s für 20MHz MCU-Takt ergänzt.
- MeasureESR() unstützt nun auch andere ADC-Taktraten als 125kHz.
- Erkennung von PUTs (Programmable Unijunction Transistor) und
  UJTs (Unijunction Transistor) eingebaut. Dank an edavid@EEVblog für
  das Zusenden von ein paar UJTs zum Testen.
- Kleinere Optimierungen für ILI9341 and ST7565R. 
- Erneut Problem mit Zeichen größer 8x8 für den ST7565R beseitigt.
- Der /RES Port-Pin für ILI9341 wurde ignoriert. Fehler beseitigt und
  auch eine falsche Verzögerung für Hardwareresets korrigiert. 
- Unterstützung von individuellen Datenleitungen für HD44780 basierte
  LCD-Module.
- Benutzerdefinierbarer Spannungsteiler für Batteriespannung.
- Ausgabe von If für Opto-Koppler ergänzt.
- Testpins vom ESR-Tool auf 1-3 geändert, um mit der k-firmware kompatibel
  zu sein.
- MCU-spezifische globale Einstellungen wurden in jeweils eigene Header-
  Dateien verschoben. Mehrere kleine Anpassungen, um auch ATmega664/1284
  zu unterstützen.
- Tschechische Texte aktualisiert. Dank an Kapa.

v1.22m 2016-03
- Test für Opto-Koppler mit Ausgabe von V_f der LED, CTR und t_on bzw. t_off
  Zeiten (Typen mit Transistorausgang). Dank an all_repair@EEVblog für
  Opto-Koppler zum Testen.

v1.21m 2016-01
- Lizenziert unter der EUPL V.1.1
- Laden und Speichern von Abgleichwerten optimiert und Unterstützung von
  zwei Abgleichprofilen eingebaut.
- IR-Detektor um RC-6 erweitert. Tasten-Problem bei vorzeitigem Entfernen des
  IR-Empfängermoduls beseitigt. Konfigurationschalter zum Abschalten des
  Vs-Widerstands zur Strombregrenzung für 5V IR-Empfängermodule.

v1.20m 2015-12
- Funktion zum Erkennen und Decodieren von IR-Fernsteuerungen implementiert.
  Benötigt ein TSOP IR-Empfängermodul.
- MainMenu() geändert, um RAM-Nutzung zu verkleinern.

v1.19m 2015-11
- Grafisches Pinout für 3-Pin Halbleiter. Zeigt Symbol plus Testpins.
- Farbunterstützung eingebaut.
- Direkte Ausgabe der Diodenanzahl in ShowDiode(), wenn mehr als 3 Dioden
  gefunden wurden (nicht länger per Show_Fail()). Hinweis von hapless@EEVblog
- LCD_ClearLine() in allen LCD-Modul-Treibern so erweitert, daß auch nur der
  Zeilenrest gelöscht werden kann, um das Löschen speziell für Grafik-LCDs zu
  beschleunigen. Die Idee ist, zuerst den Text auszugeben und dann den
  Zeilenrest zu löschen, anstatt zuerst die ganze Zeile zu löschen und dann
  den Text auszugeben.
- Treiber für ILI9341/ILI9342 basierte LCD-Module geschrieben. Dank an
  Overtuner@EEVblog-Forum für zwei LCD-Module zum Testen.
- Problem mit dem µ/micro Zeichen in den Zeichensatzdateien gelöst.
- Fehler bei Zeichen größer 8x8 in LCD_Char() für den ST7565R beseitigt. 
- Tschechische Texte aktualisiert (Dank an Kapa).
- Kleinen Fehler in MenuTool() beim Sprung vom letzten zum ersten Punkt
  beseitigt.

v1.18m 2015-07
- MenuTool() so verbessert, daß nur eine geänderte Liste aktualsiert wird.
  Ansonsten wird nur der Auswahlindikator aktualsiert.
- Fehler im Variablenmanagement in config.h beseitigt.
- Möglichkeit zum Zurücksetzen auf Firmware-Standardwerte beim Einschalten.
- Funktionen zum Speichern/Lesen der Abgleichwerte optimiert. 
- Treiber für ST7565R Grafikmodule.
- Einfache Umgebung zum Einbinden von weiteren LCD-Controllern entworfen.
  Generische Displayfunktionen nach display.c verschoben. Jeder Controller
  erhält eine eigene Source- und Headerdatei. Der alte Treiber für HD44780
  wurde an die neue Umgebung angepaßt.
- Benutzerschnittstelle für den flexiblen Umgang mit mehrzeiligen LCD-Modulen
  umgebaut.
- Sourceabhängigkeiten zu ATmega168 entfernt (zu klein ;).
- Bedienungslogik in MenuTool() optimiert.
- Neue Firmware-Edition gestartet, welche auch grafische LCD-Module
  unterstützt. Diese Version heißt "Trendy Edition". Die alte Firmwareversion
  nennt sich nun "Classic Edition".

v1.17m 2015-02
- Verbesserung von CheckDiode(). Gemessenes Vcc wird bei der Widerstands-
  prüfung beachtet. Außerdem Erkennungsproblem von Widerständen um die 2k
  bei optionalem DC-DC-Konverter (HW_ZENER) gelöst.
- Fehlerhafte Kommentare korrigiert.
- Integer-Datentypen aufgeräumt.

v1.16m 2014-09
- Test für Drehencoder.
- Ein paar Kleinigkeiten in MeasureInductance() verbessert, um die Genauigkeit
  zu erhöhen.
- ShowAdjust() um die Anzeige der Absolutwerte von Vcc und der internen
  Spannungsreferenz ergänzt (Vorschlag von Vlastimil Valouch).
- Mehrere kleine Verbesserungen.

v1.15m 2014-09
- Erweiterung von TestKey() um die Erkennung der dynamischen Drehgeschwindig-
  keit des optionalen Drehencoders.
- Rechteck-Signalgenerator mit variabler Frequenz implementiert.
- MeasureInductance() zur Rückgabe der Zeit in ns geändert und die Berechnung
  in MeasureInductor() angepaßt (Dank an Vlastimil Valouch).

v1.14m 2014-08
- Benutzerschnittstelle für Drehencoder angepaßt.
- Compiler-Warnung bzgl. R_Pin2 in ShowDiode() beseitigt (Dank an
  Milan Petko).
- Widerstände zwischen 1,5k und 3k-Ohm wurden als Doppeldioden erkannt.
  Toleranzen der Widerstanderkennung in CheckDiode() angepaßt (Danke an
  nessatse).
- ShortCircuit() so modifiert, daß man das Erzeugen eines gewollten 
  Kurzschlusses bei Problemen abbrechen kann.
- Frequenzzähler eingebaut (Hardware-Option).

v1.13m 2014-07
- Tschechische Texte (Dank an Kapa).
- Direkte ESR-Messung und PWM-Generator geben benutzte Testpins aus.
- Handhabung von Precompiler-Anweisungen für Optionen optimiert.
- Unterstützung von Drehencodern für die Bedienung (Hardware-Option).

v1.12m 2014-03
- Umlautproblem bei deutschen Texten gelöst (Dank an Andreas Hoebel).
- ESR-Messung für Kondensatoren >0,18µF.
- LCD-Modul-Ausgabe optimiert, um ein paar Bytes Flash einzusparen. 

v1.11m 2014-03
- Pin-Erkennung von Triacs verbessert (G und MT1). Die Ausgabe zeigt
  MT1 und MT2.
- Dedizierte Ausgabefunktion für Pinbelegung von Halbleitern. Ausgabe auf
  das Format "123=" zur besseren Lesbarkeit umgestellt.
- Mehrere Ausgabefunktionen optimiert.
- Test von Bipolartransistoren verbessert, um Transistoren mit Schutzdiode
  auf dem gleichen Substrat zu erkennen (erzeugt einen parasitären zweiten
  Transistor). Die Transistorausgabe kennzeichnet diesen Spezialfall mit
  einem "+" hinter der Typenangabe.
- Diodenausgabe um Anzeige von möglichem Bipolartransistor mit Schutzdiode
  und Basis-Emitter-Widerstand erweitert. Dieser wird als Doppeldiode
  erkannt. Die Ausgabe des Basis-Emitter-Widerstands signalisiert diesen
  Spezialfall.
- Ausgabe von Bipolartransistoren um Anzeige von Basis-Emitter-Widerstand
  ergänzt. Wenn ein Basis-Emitter-Widerstand gefunden wurde, wird die Ausgabe
  von hFE und V_BE übersprungen, da beide Werte nicht stimmen können,
- Erkennung der integrierten Diode von Verarmungs-FETs im Diodentest verbessert.
- Erkennungsproblem von Drain und Source bei Verarmungs-FETs beseitigt.
- Erkennung von symmetrischem Drain und Source bei Verarmungs-FETs.
- Vth ist nun negativ für P-Kanal FETs.  
- Messung von V_GT für Thyristoren und Triacs.
- Wegen wachsender Firmwaregröße gibt es den PWM-Generator nur noch für den
  ATmega328.

v1.10m 2013-10
- Unterstützung für externe 2,5V Spannungsreferenz einegbaut (Hardware-Option).
- Unterstützung für Schutz-Relais (Kondensatorentladung) eingebaut (
  Hardware-Option).
- Auf-Wiedersehen-Text beim Ausschalten zu Willkommen-Text beim Einschalten
  geändert, um die Erkennung einer zu niedrigen Versorgungsspannung zu
  erleichtern und den Spannungseinbruch durch einen DC-DC-Konverter beim
  Einschalten abzumildern.
- Test von Zenerdioden implementiert (Hardware-Option).
- Das Hauptmenü hat eine Beenden-Option, um das Menü bei Aufruf aus Versehen
  zu verlassen.
- Unterstützung von 16MHz MCU-Takt.

v1.09m 2013-07
- Erkennung von IGBTs eingebaut.
- Zusätzliche Überprüfung von MOSFETs eingebaut.
- Die hFE-Messung für Bipolartransistoren berücksichtigt den Leckstrom bei der
  Messung in Emitterschaltung.
- Bei MOSFETs wird die Richtung der integrierten Diode angezeigt.
- Problem mit verdrehten Drain und Source-Pins bei Anreicherungs-MOSFETs gelöst.
- Lösung für Probleme mancher IDEs mit dem Makefile. Wichtige Werte bzw.
  Einstellungen können auch in config.h gesetzt werden.

v1.08m 2013-07
- Da SmallResistor() bei bestimmten Induktivitäten keinen korrekten Gleich-
  stromwiderstandswert liefern kann, wurde CheckResistor() um eine Erkennung
  der Problemfälle ergänzt, um die Meßwerte der Standardmessung beizubehalten.
- Induktivitätsmessung eingebaut (nur für ATmega328/P)
- Kleinere Verbesserungen bei der Anzeige von Dioden und Bipolartransistoren.
- Leckstrommessung eingebaut.
- Problem bei Germanium-Transistoren mit hohem Leckstrom gelöst. Wurden als
  P-Kanal JFET erkannt.
- Ein paar Funktionen umbenannt und Kommentare ergänzt bzw. umformuliert.

v1.07m 2013-06
- Diodenausgabe optimiert und Anzeige von Vf für niedrige Ströme eingebaut.
- Diodenerkennung verbessert. Kondensatoren und Widerstände werden
  deutlich besser ausgeschlossen. Die Kondensatorerkennung wird bei
  erkannter Diode übersprungen, um den Suchvorgang zu verkürzen. 
- Array-Überlauffehler in CheckResistor() beseitigt.
- Anzeigelogik für Cursor verbessert, um das Vorhandensein weiterer Infos
  bzw. die erneute Bauteilsuche anzuzeigen.
- Bedienung vom PWM-Generator verbessert, um das Beenden aus Versehen zu
  vermeiden (braucht nun zwei kurze Tastendrücke).
- Generische Menüfunktion eingabeut und alle Menüs darauf umgestellt (
  geändertes Layout!).
- TestKey() produziert nun einen schönen, blinkenden Cursor.

v1.06m 2013-03
- Mehrere kleine Verbessserungen und etwas aufgeräumt.
- TestKey() so erweitert, daß der Benutzer über die erwartete Eingabe
  informiert werden kann.
- TestKey()-Funktion bzgl. kurzer Tastendrücke verbessert.
- PWM-Generator zur Erzeugung von pulsweitenmodulierten Signalen mit
  unterschiedlichen Frequenzen und frei wählbarem Tastverhältnis eingebaut.
- Implementation einer Schlaffunktion, um den Stromverbrauch des Testers zu
  reduzieren. Der durchschnittliche Stromverbrauch wird damit auf etwas die
  Hälfte verringert (Hintergrundbeleuchtung ausgenommen).
- Endladefunktion verbessert. Wenn das Entladen fehl schlägt, werden die
  betroffenden Pins und die Restspannung ausgegeben. Das sollte helfen,
  einen zu niedrigen Wert für CAP_DISCHARGED zu entdecken.
- Möglichkeit zum Setzen von Fehlertypen eingebaut.

v1.05m 2012-11
- LargeCap_table[] und SmallCap_table[] vom EEPROM in das Flash verschoben,
  um den EEPROM-Bedarf zu reduzieren. Die Firmware mit deutschen Texten
  brauchte mehr als die 512 Bytes vom ATmega168.

v1.04m 2012-11
- Einfache Logik in die Dioden-Ausgabe einbaut, damit bei anti-parallelen
  Dioden die Kapazitätsmessung entfällt.

v1.03m 2012-11
- Erkennungsproblem von Leistungsdioden gelöst. Dioden mit hohem Leckstrom
  wurden als Widerstand erkannt.
- Compiler-Warnungen bzgl. nicht initialisierter Variablen beseitigt.
  Vergrößert die Firmware um 44 Bytes :-(

v1.02m 2012-11
- Obere Grenze für den Widerstand der Messleitungen von 1,00 Ohm im
  Selbstabgleich eingebaut.
- Die Funktionen für den Selbsttest und -Abgleich führen einen Kurzschlußtest
  durch und geben Rückmeldung.
- Das Hauptmenü gibt Rückmeldung über Erfolg/Fehler der ausgewählten Aktion.

v1.01m 2012-10
- Prüfsumme für gespeicherte Abgleichwerte plus Überprüfung.
- Messfunktion für kleine Widerstände (Auflösung: 0,01 Ohm).
- Selbstabgleich um Nulloffset für den Widerstand der Messkabel erweitert.
- CheckResistor() führt zusätzliche Messung für kleine Widerstände (<10 Ohm)
  durch.
- Funktion zum Vergleich von skalierten Werten eingefügt. 
- Mehrere Funktionen an die variable Skalierung von Werten angepaßt.

v1.00m 2012-09
- Einfaches Menü zur Auswahl von Selbsttest, Selbstabgleich, Speichern der
  Abgleichwerte im EEPROM und Anzeige der Abgleichswerte.
- hFE von 16 auf 32 Bit geändert (keine 65k-Begrenzung mehr).

v0.99m 2012-09
- Erste veröffentlichte Version basierend auf Karl-Heinz' 0.99k.


------------------------------------ EOF -------------------------------------
